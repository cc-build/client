image: cincproject/omnibus-debian

stages:
 - patch
 - package
 - test
 - cleanup
 - deploy
 - publish

variables:
  ORIGIN: https://github.com/chef/chef.git
  REF: master
  CHANNEL: unstable
  CINC_PRODUCT: cinc
  OMNIBUS_FIPS_MODE: "true"

workflow:
  rules:
    # Run if we trigger a pipeline from the web
    - if: $CI_PIPELINE_SOURCE == "web"
    # Run if this is a merge request
    - if: $CI_MERGE_REQUEST_ID

include:
  - local: .gitlab/package.yml
  - local: .gitlab/test.yml

patch:
  stage: patch
  tags:
    - docker-x86_64
  script:
    - ./patch.sh
  artifacts:
    expire_in: 1mo
    paths:
      - chef/
      - chef-zero/
      - inspec/
      - omnibus-software/

.bio_setup:
  before_script:
    - scripts/install-biome.sh

# Package stage

package:source:
  stage: package
  needs:
    - patch
  tags:
    - docker-x86_64
  script:
    - ./build-source.sh cinc chef
  artifacts:
    expire_in: 1mo
    paths:
      - data/*

package:bio:linux:
  stage: package
  extends:
    - .bio_setup
  tags:
    - docker-x86_64
  needs:
    - patch
  script:
    - bio pkg build ./chef
  variables:
    HAB_ORIGIN: cinc
    HAB_NONINTERACTIVE: "true"
  artifacts:
    paths:
      - results/*.hart

package:amazonlinux-2:x86_64:
  extends: .package:amazonlinux
  image: cincproject/omnibus-amazonlinux:2
  cache:
    key: amazonlinux:2:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "2"

package:amazonlinux-2:aarch64:
  extends: .package:amazonlinux
  image: cincproject/omnibus-amazonlinux:2
  cache:
    key: amazonlinux:2:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "2"
    OMNIBUS_FIPS_MODE: "false"

package:centos-6:x86_64:
  extends: .package:centos
  image: cincproject/omnibus-centos:6
  cache:
    key: centos:6:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "6"

package:centos-7:x86_64:
  extends: .package:centos
  image: cincproject/omnibus-centos:7
  cache:
    key: centos:7:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "7"

package:centos-7:aarch64:
  extends: .package:centos
  image: cincproject/omnibus-centos:7
  cache:
    key: centos:7:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "7"
    OMNIBUS_FIPS_MODE: "false"

package:centos-7:ppc64le:
  extends: .package:centos
  image: cincproject/omnibus-centos:7
  cache:
    key: centos:7:ppc64le
  tags:
    - docker-ppc64le
  variables:
    PLATFORM_VER: "7"
    OMNIBUS_FIPS_MODE: "false"

package:centos-8:x86_64:
  extends: .package:centos
  image: cincproject/omnibus-centos:8
  cache:
    key: centos:8:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "8"

package:centos-8:aarch64:
  extends: .package:centos
  image: cincproject/omnibus-centos:8
  cache:
    key: centos:8:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "8"
    OMNIBUS_FIPS_MODE: "false"

package:centos-8:ppc64le:
  extends: .package:centos
  image: cincproject/omnibus-centos:8
  cache:
    key: centos:8:ppc64le
  tags:
    - docker-ppc64le
  variables:
    PLATFORM_VER: "8"
    OMNIBUS_FIPS_MODE: "false"

package:debian-9:x86_64:
  extends: .package:debian
  image: cincproject/omnibus-debian:9
  cache:
    key: debian:9:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "9"

package:debian-10:x86_64:
  extends: .package:debian
  image: cincproject/omnibus-debian:10
  cache:
    key: debian:10:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "10"

package:debian-10:aarch64:
  extends: .package:debian
  image: cincproject/omnibus-debian:10
  cache:
    key: debian:10:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "10"
    OMNIBUS_FIPS_MODE: "false"

package:macos-10.14:
  extends: .package:macos
  cache:
    key: macos:10.14
  tags:
    - macos-10.14
  variables:
    PLATFORM_VER: "10.14"
    OMNIBUS_FIPS_MODE: "false"

package:macos-10.15:
  extends: .package:macos
  cache:
    key: macos:10.15
  tags:
    - macos-10.15
  variables:
    PLATFORM_VER: "10.15"
    OMNIBUS_FIPS_MODE: "false"

package:opensuse-15:x86_64:
  extends: .package:opensuse
  image: cincproject/omnibus-opensuse:15
  cache:
    key: opensuse:15:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "15"

package:opensuse-15:aarch64:
  extends: .package:opensuse
  image: cincproject/omnibus-opensuse:15
  cache:
    key: opensuse:15:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "15"
    OMNIBUS_FIPS_MODE: "false"

package:windows-2012r2:
  extends: .package:windows
  cache:
    key: windows-2012r2
  tags:
    - windows-x64
  variables:
    PLATFORM_VER: "2012r2"

package:ubuntu-16.04:x86_64:
  extends: .package:ubuntu
  image: cincproject/omnibus-ubuntu:16.04
  cache:
    key: ubuntu:16.04:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "16.04"

package:ubuntu-18.04:x86_64:
  extends: .package:ubuntu
  image: cincproject/omnibus-ubuntu:18.04
  cache:
    key: ubuntu:18.04:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "18.04"

package:ubuntu-18.04:aarch64:
  extends: .package:ubuntu
  image: cincproject/omnibus-ubuntu:18.04
  cache:
    key: ubuntu:18.04:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "18.04"
    OMNIBUS_FIPS_MODE: "false"

package:ubuntu-20.04:x86_64:
  extends: .package:ubuntu
  image: cincproject/omnibus-ubuntu:20.04
  cache:
    key: ubuntu:20.04:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "20.04"

package:ubuntu-20.04:aarch64:
  extends: .package:ubuntu
  image: cincproject/omnibus-ubuntu:20.04
  cache:
    key: ubuntu:20.04:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "20.04"
    OMNIBUS_FIPS_MODE: "false"

# Test stage

test:bio:linux:
  stage: test
  extends:
    - .bio_setup
  tags:
    - docker-x86_64
  needs:
    - package:bio:linux
  script:
    - bio install results/*.hart --binlink
    - export CINC_PATH=$(bio pkg path cinc/cinc-infra-client)
    - export GEM_PATH=${CINC_PATH}/vendor:$GEM_PATH
    - ln -s $CINC_PATH /opt/cinc
    - mkdir /opt/cinc/embedded
    - ln -s /opt/cinc/bin /opt/cinc/embedded/bin
    - ln -s $(bio pkg path core/ruby27)/bin/ruby /opt/cinc/embedded/bin/ruby
    - cinc-auditor exec test/integration/default_spec.rb
  variables:
    APPBUNDLER_ALLOW_RVM: "true"
    HAB_TEST: "true"

test:amazonlinux-2:x86_64:
  extends: .test:amazonlinux
  image: cincproject/omnibus-amazonlinux:2
  needs:
    - package:amazonlinux-2:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "2"

test:amazonlinux-2:aarch64:
  extends: .test:amazonlinux
  image: cincproject/omnibus-amazonlinux:2
  needs:
    - package:amazonlinux-2:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "2"

test:centos-6:x86_64:
  extends: .test:centos
  image: cincproject/omnibus-centos:6
  needs:
    - package:centos-6:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "6"

test:centos-7:x86_64:
  extends: .test:centos
  image: cincproject/omnibus-centos:7
  needs:
    - package:centos-7:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "7"

test:centos-7:aarch64:
  extends: .test:centos
  image: cincproject/omnibus-centos:7
  needs:
    - package:centos-7:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "7"

test:centos-7:ppc64le:
  extends: .test:centos
  image: cincproject/omnibus-centos:7
  needs:
    - package:centos-7:ppc64le
  tags:
    - docker-ppc64le
  variables:
    PLATFORM_VER: "7"

test:centos-8:x86_64:
  extends: .test:centos
  image: cincproject/omnibus-centos:8
  needs:
    - package:centos-8:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "8"

test:centos-8:aarch64:
  extends: .test:centos
  image: cincproject/omnibus-centos:8
  needs:
    - package:centos-8:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "8"

test:centos-8:ppc64le:
  extends: .test:centos
  image: cincproject/omnibus-centos:8
  needs:
    - package:centos-8:ppc64le
  tags:
    - docker-ppc64le
  variables:
    PLATFORM_VER: "8"

test:debian-9:x86_64:
  extends: .test:debian
  image: cincproject/omnibus-debian:9
  needs:
    - package:debian-9:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "9"

test:debian-10:x86_64:
  extends: .test:debian
  image: cincproject/omnibus-debian:10
  needs:
    - package:debian-10:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "10"

test:debian-10:aarch64:
  extends: .test:debian
  image: cincproject/omnibus-debian:10
  needs:
    - package:debian-10:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "10"

test:macos-10.14:
  extends: .test:macos
  needs:
    - package:macos-10.14
  tags:
    - macos-10.14
  variables:
    PLATFORM_VER: "10.14"

test:macos-10.15:
  extends: .test:macos
  needs:
    - package:macos-10.15
  tags:
    - macos-10.15
  variables:
    PLATFORM_VER: "10.15"

test:opensuse-15:x86_64:
  extends: .test:opensuse
  image: cincproject/omnibus-opensuse:15
  needs:
    - package:opensuse-15:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "15"

test:opensuse-15:aarch64:
  extends: .test:opensuse
  image: cincproject/omnibus-opensuse:15
  needs:
    - package:opensuse-15:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "15"

test:ubuntu-16.04:x86_64:
  extends: .test:ubuntu
  image: cincproject/omnibus-ubuntu:16.04
  needs:
    - package:ubuntu-16.04:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "16.04"

test:ubuntu-18.04:x86_64:
  extends: .test:ubuntu
  image: cincproject/omnibus-ubuntu:18.04
  needs:
    - package:ubuntu-18.04:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "18.04"

test:ubuntu-18.04:aarch64:
  extends: .test:ubuntu
  image: cincproject/omnibus-ubuntu:18.04
  needs:
    - package:ubuntu-18.04:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "18.04"

test:ubuntu-20.04:x86_64:
  extends: .test:ubuntu
  image: cincproject/omnibus-ubuntu:20.04
  needs:
    - package:ubuntu-20.04:x86_64
  tags:
    - docker-x86_64
  variables:
    PLATFORM_VER: "20.04"

test:ubuntu-20.04:aarch64:
  extends: .test:ubuntu
  image: cincproject/omnibus-ubuntu:20.04
  needs:
    - package:ubuntu-20.04:aarch64
  tags:
    - docker-aarch64
  variables:
    PLATFORM_VER: "20.04"

test:windows-2012r2:
  extends: .test:windows
  needs:
    - package:windows-2012r2
  tags:
    - windows-x64
  variables:
    PLATFORM_VER: "2012r2"

# Deploy stage

.ssh-setup:
  before_script:
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "${SSH_KNOWN_HOSTS}" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

deploy:
  allow_failure: false
  stage: deploy
  extends: .ssh-setup
  # Only run if this is triggered from the web
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
    - when: never
  tags:
    - docker-x86_64
  dependencies:
    - package:source
    - package:amazonlinux-2:aarch64
    - package:amazonlinux-2:x86_64
    - package:centos-6:x86_64
    - package:centos-7:aarch64
    - package:centos-7:ppc64le
    - package:centos-7:x86_64
    - package:centos-8:aarch64
    - package:centos-8:ppc64le
    - package:centos-8:x86_64
    - package:debian-9:x86_64
    - package:debian-10:aarch64
    - package:debian-10:x86_64
    - package:macos-10.14
    - package:macos-10.15
    - package:opensuse-15:aarch64
    - package:opensuse-15:x86_64
    - package:ubuntu-16.04:x86_64
    - package:ubuntu-18.04:aarch64
    - package:ubuntu-18.04:x86_64
    - package:ubuntu-20.04:aarch64
    - package:ubuntu-20.04:x86_64
    - package:windows-2012r2
  script:
    - ssh cinc@${DOWNLOADS_HOST} "mkdir -p /data/incoming/files/${CHANNEL}/cinc/$(cat VERSION)"
    - ssh cinc@${DOWNLOADS_HOST} "mkdir -p /data/incoming/source/${CHANNEL}/cinc/"
    - rsync -avH --delete data/ cinc@${DOWNLOADS_HOST}:/data/incoming/files/${CHANNEL}/cinc/$(cat VERSION)/
    - rsync -avH --delete source/ cinc@${DOWNLOADS_HOST}:/data/incoming/source/${CHANNEL}/cinc/
    - ssh cinc@${DOWNLOADS_HOST} "chmod 755 /data/incoming/files/${CHANNEL}/cinc/$(cat VERSION)/"

deploy:bio:linux:
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
    - when: never
  extends:
    - .bio_setup
  tags:
    - docker-x86_64
  needs:
    - package:bio:linux
    - test:bio:linux
  script:
    - bio pkg upload results/*.hart

# Publish stage

publish:
  stage: publish
  extends: .ssh-setup
  dependencies: []
  # Only run if this is triggered from the web
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: on_success
    - when: never
  tags:
    - downloads
  script:
    - sudo mkdir -p /data/mirror/{files,source}/${CHANNEL}/cinc
    - sudo /usr/bin/rsync -avH /data/incoming/files/${CHANNEL}/cinc/ /data/mirror/files/${CHANNEL}/cinc/
    - sudo /usr/bin/rsync -avH /data/incoming/source/${CHANNEL}/cinc/ /data/mirror/source/${CHANNEL}/cinc/
    - sudo -E -u cinc /usr/local/bin/update-cinc-api
    - ssh -q cinc@${MIRROR_HOST} "~/sync-from-master"

publish-gems:
  stage: publish
  # Only run if this is triggered from the web
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: on_success
    - when: never
  tags:
    - docker-x86_64
  dependencies:
    - patch
  script:
    - ./publish-gems.sh

publish-docker:
  image: docker:latest
  services:
  - docker:dind
  stage: publish
  # Only run if this is triggered from the web
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: on_success
    - if: $CHANNEL == "unstable"
      when: never
    - when: never
  tags:
    - docker-x86_64
  dependencies:
    - patch
  # binaries required for script
  before_script:
    - apk add curl bash
  script:
    - bash docker.sh
  variables:
    DOCKER_TLS_CERTDIR: "/certs"

publish:bio:linux:
  needs:
    - package:bio:linux
    - deploy:bio:linux
  extends:
    - .bio_setup
  stage: publish
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: on_success
    - when: never
  script:
    - bio pkg install core/jq-static -b
    - export PKG=$(bio pkg info results/*.hart -j | jq '[.origin,.name,.version,.release] | join("/")')
    - bio pkg promote $PKG $CHANNEL

.cleanup:
  stage: cleanup
  dependencies: []
  variables:
    GIT_CHECKOUT: "false"
  when: always
  script:
    - sudo rm -rf chef/

cleanup:macos-10.14:
  extends: .cleanup
  tags:
    - macos-10.14

cleanup:macos-10.15:
  extends: .cleanup
  tags:
    - macos-10.15
